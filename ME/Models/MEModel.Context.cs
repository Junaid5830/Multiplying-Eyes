//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ME.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MultiplyingEyesEntities : DbContext
    {
        public MultiplyingEyesEntities()
            : base("name=MultiplyingEyesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Area> Areas { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Help> Helps { get; set; }
        public virtual DbSet<HelpImage> HelpImages { get; set; }
        public virtual DbSet<Manager> Managers { get; set; }
        public virtual DbSet<Question> Questions { get; set; }
        public virtual DbSet<Region> Regions { get; set; }
        public virtual DbSet<SurveyAnswer> SurveyAnswers { get; set; }
        public virtual DbSet<Survey> Surveys { get; set; }
        public virtual DbSet<UserType> UserTypes { get; set; }
        public virtual DbSet<RetailOutlet> RetailOutlets { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Rating> Ratings { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<GetAllQuestionList_Result> GetAllQuestionList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllQuestionList_Result>("GetAllQuestionList");
        }
    
        public virtual int sp_DeleteQuestionData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteQuestionData");
        }
    
        public virtual ObjectResult<sp_Get_Dashboard_Result> sp_Get_Dashboard()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Get_Dashboard_Result>("sp_Get_Dashboard");
        }
    
        public virtual ObjectResult<sp_GetAllManager_Result> sp_GetAllManager()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAllManager_Result>("sp_GetAllManager");
        }
    
        public virtual ObjectResult<sp_GetAllRetailOutlet_Result> sp_GetAllRetailOutlet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAllRetailOutlet_Result>("sp_GetAllRetailOutlet");
        }
    
        public virtual ObjectResult<sp_GetAllSurvey_Result> sp_GetAllSurvey(Nullable<int> pumpId, Nullable<int> areaId, Nullable<int> regionId, Nullable<int> deptId, Nullable<int> catId)
        {
            var pumpIdParameter = pumpId.HasValue ?
                new ObjectParameter("pumpId", pumpId) :
                new ObjectParameter("pumpId", typeof(int));
    
            var areaIdParameter = areaId.HasValue ?
                new ObjectParameter("AreaId", areaId) :
                new ObjectParameter("AreaId", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            var catIdParameter = catId.HasValue ?
                new ObjectParameter("CatId", catId) :
                new ObjectParameter("CatId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAllSurvey_Result>("sp_GetAllSurvey", pumpIdParameter, areaIdParameter, regionIdParameter, deptIdParameter, catIdParameter);
        }
    
        public virtual ObjectResult<sp_GetAllUsers_Result> sp_GetAllUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAllUsers_Result>("sp_GetAllUsers");
        }
    
        public virtual ObjectResult<sp_GetSurveyAnswers_Result> sp_GetSurveyAnswers(Nullable<int> surveyId)
        {
            var surveyIdParameter = surveyId.HasValue ?
                new ObjectParameter("surveyId", surveyId) :
                new ObjectParameter("surveyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetSurveyAnswers_Result>("sp_GetSurveyAnswers", surveyIdParameter);
        }
    }
}
